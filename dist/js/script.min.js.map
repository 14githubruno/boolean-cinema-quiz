{"version":3,"sources":["data.js","index.js"],"names":["secondsObject","basic","medium","advanced","assertionsObject","assertion","value","logo","document","querySelector","navInfo","homePage","headings","containerResult","resultUser","basicQuizButton","mediumQuizButton","advancedQuizButton","quizPage","timer","secondsTimer","eachTrack","singleAssertion","inputs","querySelectorAll","submitButton","infoModal","tooltipAboutContainer","closeButton","shortcuts","ev","preventDefault","key","ctrlKey","altKey","click","showQuiz","addEventListener","classList","add","remove","hideQuiz","removeEventListener","confirmTheEndOfTheQuiz","index","textContent","finalResult","length","assertionsValues","userValues","restoreArrays","checkResult","arr1","arr2","forEach","el","push","interval","timeout","handleTimerCountDown","levelSec","setInterval","setTimeout","clearInterval","handleQuiz","arr","checked","input","clearTimeout","currentItem","array","prepareArrayForTheQuiz","arrOfAssertions","assert","startQuiz","doNotAllowQuiz","window","location","reload","showInfoModal","e","stopPropagation","hideInfoModal","areaOfModal","contains","target","areaCloseButton"],"mappings":"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","file":"script.min.js","sourcesContent":["// obj of seconds\r\nconst secondsObject = {\r\n  basic: 30,\r\n  medium: 25,\r\n  advanced: 20,\r\n};\r\n\r\n// obj of assertions\r\nconst assertionsObject = {\r\n  basic: [\r\n    {\r\n      assertion: \"Lorem Basic 1\",\r\n      value: true,\r\n    },\r\n    {\r\n      assertion: \"Lorem Basic 2\",\r\n      value: true,\r\n    },\r\n    {\r\n      assertion: \"Lorem Basic 3\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Basic 4\",\r\n      value: true,\r\n    },\r\n    {\r\n      assertion: \"Lorem Basic 5\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Basic 6\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Basic 7\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Basic 8\",\r\n      value: true,\r\n    },\r\n    {\r\n      assertion: \"Lorem Basic 9\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Basic 10\",\r\n      value: true,\r\n    },\r\n  ],\r\n  medium: [\r\n    {\r\n      assertion: \"Lorem Medium 1\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Medium 2\",\r\n      value: true,\r\n    },\r\n    {\r\n      assertion: \"Lorem Medium 3\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Medium 4\",\r\n      value: true,\r\n    },\r\n    {\r\n      assertion: \"Lorem Medium 5\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Medium 6\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Medium 7\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Medium 8\",\r\n      value: true,\r\n    },\r\n    {\r\n      assertion: \"Lorem Medium 9\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Medium 10\",\r\n      value: true,\r\n    },\r\n  ],\r\n  advanced: [\r\n    {\r\n      assertion: \"Lorem Advanced 1\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Advanced 2\",\r\n      value: true,\r\n    },\r\n    {\r\n      assertion: \"Lorem Advanced 3\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Advanced 4\",\r\n      value: true,\r\n    },\r\n    {\r\n      assertion: \"Lorem Advanced 5\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Advanced 6\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Advanced 7\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Advanced 8\",\r\n      value: true,\r\n    },\r\n    {\r\n      assertion: \"Lorem Advanced 9\",\r\n      value: false,\r\n    },\r\n    {\r\n      assertion: \"Lorem Advanced 10\",\r\n      value: true,\r\n    },\r\n  ],\r\n};\r\n","// navbar items\r\nconst logo = document.querySelector(\".navbar-logo\");\r\nconst navInfo = document.querySelector(\".info-path\");\r\n// 1 homepage\r\nconst homePage = document.querySelector(\".total-homepage\");\r\nconst headings = document.querySelector(\".heading\");\r\nconst containerResult = document.querySelector(\".result\");\r\nconst resultUser = document.querySelector(\".result-user\");\r\nconst basicQuizButton = document.querySelector(\".level-basic\");\r\nconst mediumQuizButton = document.querySelector(\".level-medium\");\r\nconst advancedQuizButton = document.querySelector(\".level-advanced\");\r\n// 2 quiz\r\nconst quizPage = document.querySelector(\".total-quiz\");\r\nconst timer = document.querySelector(\".timer\");\r\nconst secondsTimer = document.querySelector(\".timer-item-seconds\");\r\nconst eachTrack = document.querySelector(\".each-assertion\");\r\nconst singleAssertion = document.querySelector(\".assertion\");\r\nconst inputs = document.querySelectorAll(\"input\");\r\nconst submitButton = document.querySelector(\".button-submit-js\");\r\n// 3 info\r\nconst infoModal = document.querySelector(\".info\");\r\nconst tooltipAboutContainer = document.querySelector(\r\n  \".tooltip-about-container\"\r\n);\r\nconst closeButton = document.querySelector(\".close-btn\");\r\n\r\n//\r\n// function for allowing custom keyboard shortcuts\r\nconst shortcuts = (ev) => {\r\n  ev.preventDefault();\r\n\r\n  if (ev.key === \"t\" && ev.ctrlKey && ev.altKey) {\r\n    return inputs[0].click();\r\n  }\r\n  if (ev.key === \"f\" && ev.ctrlKey && ev.altKey) {\r\n    return inputs[1].click();\r\n  }\r\n  if (ev.key === \"s\" && ev.ctrlKey && ev.altKey) {\r\n    return submitButton.click();\r\n  }\r\n};\r\n\r\n// show quiz\r\nconst showQuiz = () => {\r\n  document.addEventListener(\"keydown\", shortcuts);\r\n  homePage.classList.add(\"hidden\");\r\n  quizPage.classList.remove(\"hidden\");\r\n};\r\n\r\n// hide quiz\r\nconst hideQuiz = () => {\r\n  document.removeEventListener(\"keydown\", shortcuts);\r\n  quizPage.classList.add(\"hidden\");\r\n  homePage.classList.remove(\"hidden\");\r\n};\r\n\r\n// end quiz\r\nconst confirmTheEndOfTheQuiz = () => {\r\n  index = 1;\r\n  eachTrack.textContent = 1;\r\n  resultUser.textContent = `The result is ${finalResult.length}/10`;\r\n  headings.classList.add(\"hidden\");\r\n  containerResult.classList.remove(\"hidden\");\r\n};\r\n\r\n// arrays to grab data to check user's answers\r\nlet finalResult = [];\r\nlet assertionsValues = [];\r\nlet userValues = [];\r\n//\r\nconst restoreArrays = () => {\r\n  assertionsValues = [];\r\n  userValues = [];\r\n  finalResult = [];\r\n};\r\n\r\n// func to calculate user's correct answers\r\nconst checkResult = (arr1, arr2) => {\r\n  arr1.forEach((el, index) => {\r\n    if (el === arr2[index]) {\r\n      finalResult.push(\"correct answer\");\r\n    }\r\n  });\r\n};\r\n\r\n// function for counting down (timer)\r\nlet interval;\r\nlet timeout;\r\nconst handleTimerCountDown = (levelSec) => {\r\n  interval = setInterval(() => {\r\n    levelSec--;\r\n    secondsTimer.textContent = levelSec;\r\n  }, 1000);\r\n\r\n  let rightTime = levelSec * 1000;\r\n  timeout = setTimeout(() => {\r\n    if (finalResult.length === 0) {\r\n      checkResult(userValues, assertionsValues);\r\n    }\r\n    confirmTheEndOfTheQuiz();\r\n    restoreArrays();\r\n    hideQuiz();\r\n    clearInterval(interval);\r\n  }, rightTime);\r\n};\r\n\r\n// functions for handling the entire quiz (end it if needed), changing assertions and keeping track of them, storing user's answers\r\nlet index = 1;\r\nconst handleQuiz = (arr) => {\r\n  if (!inputs[0].checked && !inputs[1].checked) {\r\n    return;\r\n  } else {\r\n    inputs.forEach((input) => {\r\n      if (input.checked) {\r\n        if (input.value === \"true\") {\r\n          userValues.push(true);\r\n        } else {\r\n          userValues.push(false);\r\n        }\r\n        input.checked = false;\r\n      }\r\n    });\r\n\r\n    if (userValues.length === arr.length) {\r\n      checkResult(userValues, assertionsValues);\r\n      confirmTheEndOfTheQuiz();\r\n      restoreArrays();\r\n      hideQuiz();\r\n      clearInterval(interval);\r\n      clearTimeout(timeout);\r\n    } else {\r\n      let currentItem = arr[index];\r\n      singleAssertion.textContent = currentItem?.assertion;\r\n      index++;\r\n      eachTrack.textContent = index;\r\n    }\r\n  }\r\n};\r\nsubmitButton.addEventListener(\"click\", () => {\r\n  handleQuiz(array);\r\n});\r\n\r\n// function allowing the setup and grabbing the boolean values of each assertion\r\nlet array;\r\nconst prepareArrayForTheQuiz = (arrOfAssertions) => {\r\n  arrOfAssertions.forEach((assert) => {\r\n    assertionsValues.push(assert?.value);\r\n  });\r\n  array = [...arrOfAssertions];\r\n  singleAssertion.textContent = array[0]?.assertion;\r\n};\r\n\r\n// function for starting the right quiz with the right number of seconds;\r\nconst startQuiz = (levelSec) => {\r\n  showQuiz();\r\n  secondsTimer.textContent = levelSec;\r\n  handleTimerCountDown(levelSec);\r\n};\r\n\r\n// THREE buttons for the THREE levels\r\n// basic-button\r\nbasicQuizButton.addEventListener(\"click\", () => {\r\n  startQuiz(secondsObject.basic);\r\n  prepareArrayForTheQuiz(assertionsObject.basic);\r\n});\r\n// medium-button\r\nmediumQuizButton.addEventListener(\"click\", () => {\r\n  startQuiz(secondsObject.medium);\r\n  prepareArrayForTheQuiz(assertionsObject.medium);\r\n});\r\n// advanced-button\r\nadvancedQuizButton.addEventListener(\"click\", () => {\r\n  startQuiz(secondsObject.advanced);\r\n  prepareArrayForTheQuiz(assertionsObject.advanced);\r\n});\r\n\r\n//\r\n//function/behaviour of the logo\r\nconst doNotAllowQuiz = () => {\r\n  hideQuiz();\r\n  window.location.reload();\r\n};\r\nlogo.addEventListener(\"click\", doNotAllowQuiz);\r\n\r\n// function for info (modal)\r\nconst showInfoModal = (e) => {\r\n  e.stopPropagation();\r\n  infoModal.classList.remove(\"hidden\");\r\n  window.addEventListener(\"click\", hideInfoModal);\r\n};\r\nnavInfo.addEventListener(\"click\", showInfoModal);\r\n\r\nconst hideInfoModal = (e) => {\r\n  let areaOfModal = tooltipAboutContainer.contains(e.target);\r\n  let areaCloseButton = closeButton.contains(e.target);\r\n  if (!areaOfModal || areaCloseButton) {\r\n    infoModal.classList.add(\"hidden\");\r\n    window.removeEventListener(\"click\", hideInfoModal);\r\n  }\r\n};\r\n"]}